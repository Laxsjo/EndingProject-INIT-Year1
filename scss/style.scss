@use 'resources' as *;
@use 'icons.scss' as *;

:root {
	--goldenRatio: 1.61803398875;

	quotes: '“' '”';

	margin: 0;
	padding: 0;
	min-height: 100vh;

	&.noAnim {
		* {
			animation-duration: 0s !important;
			transition-duration: 0s !important;
		}
	}
}

// [tabindex='0'] {
// 	background-color: hsla(0, 50%, 60%, 0.5) !important;
// }

body {
	margin: 0;
	padding: 0.01px;

	font-family: 'Atkinson Hyperlegible', 'Noto Sans Display', Arial, sans-serif;
	line-height: 1.5;

	color: var(--textColor);

	min-height: 100vh;
}

* {
	box-sizing: border-box;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	color: var(--titleTextColor);

	font-family: 'Poppins', Arial, Helvetica, sans-serif;
}

h1 {
	margin-block: var(--gapSection3) var(--gapSection2);
}
h2 {
	margin-block: var(--gapSection1) var(--gapPair);
}
h3,
h4,
h5,
h6 {
	margin-block: var(--gapPair);
}

p {
	box-sizing: border-box;
	margin-block: var(--gapPair);
	max-width: var(--paragraphWidth-medium);
	min-width: var(--paragraphMinWidth-medium);
}

q {
	color: var(--textBoldColor);
}

blockquote {
	// display: inline;

	box-sizing: border-box;
	max-width: calc(var(--paragraphWidth-wide) - var(--gapPair));
	margin-block: var(--gapPair);
	margin-inline: var(--gapPair);
	padding-inline: 1.5rem;
	padding-block: 0.2rem;

	font-style: italic;

	color: var(--textGrayColor);

	border-left: 2px solid var(--contentColoredBorder1);

	background: var(--contentColoredBackground1);

	// &::before {
	// 	content: open-quote;
	// }
	// &::after {
	// 	content: close-quote;
	// }
}

.paragraph-thin {
	max-width: var(--paragraphMinWidth-thin);
}
.paragraph-medium {
	max-width: var(--paragraphMinWidth-medium);
}
.paragraph-wide {
	max-width: var(--paragraphMinWidth-wide);
}

dl {
	// padding-top: 0.2rem;
	width: fit-content;

	// border-radius: 0.4rem;

	// background: var(--contentBackground1);

	dt {
		margin: 0;
		// margin-left: var(--containerPadding-fieldset);

		font-weight: 500;

		color: var(--textBoldColor);
	}
	dd {
		margin: 0;
		padding-block: var(--gapWithinSubPair);
		padding-right: var(--containerPadding-fieldset);
		padding-left: var(--gapPair);
		// margin-left: var(--containerPadding-fieldset);
		margin-bottom: var(--gapPair);

		// border-top: 2px solid var(--contentBorder1);

		// background: var(--contentBackground1);

		// color: var(--textGrayColor);

		&::before {
			content: 'navigate_next';

			@include icon;

			font-size: var(--md-medium);
		}
	}
}

ol,
ul {
	li {
		max-width: var(--paragraphWidth-wide);
		margin-bottom: var(--gapWithinPair);
	}
}

:focus-visible {
	outline: 2px dotted var(--focusColor1);
	position: relative;
	z-index: 100;
}

.fancyLink {
	--underlineColor1: var(--linkNormal);
	--underlineColor2: var(--linkVisited);
	--underlineHoverColor1: var(--linkHover1);
	--underlineHoverColor2: var(--linkHover2);
	// display: inline;
	// position: relative;
	// text-decoration: none;
	// background: linear-gradient(
	// 		90deg,
	// 		var(--underlineColor1),
	// 		var(--underlineColor2)
	// 	)
	// 	100% 100%/0% 2px no-repeat;
	// transition: background-size 0.2s;

	@include fancyLink;
}
.fancyLink[target='_blank']::after {
	content: 'open_in_new';
	@include iconOutlined;
	font-size: 0.9em;
	vertical-align: text-top;
}
.fancyLink.noUnderline {
	background-image: linear-gradient(
			90deg,
			var(--underlineColor1),
			var(--underlineColor2)
		),
		linear-gradient(transparent, transparent);
}
.fancyLink.noColor {
	--underlineColor1: currentColor;
	--underlineColor2: currentColor;
	--underlineHoverColor1: currentColor;
	--underlineHoverColor2: currentColor;
}

a {
	color: var(--linkNormal);
}

a:visited {
	color: var(--linkVisited);
}

// .fancyLink:hover,
// .fancyLink:focus-visible {
// 	background-size: 100% 2px, 100% 2px;
// 	background-position: 0% 100%, 0% 100%;
// 	background-image: linear-gradient(
// 			90deg,
// 			var(--underlineHoverColor1),
// 			var(--underlineHoverColor2)
// 		),
// 		linear-gradient(transparent, transparent);
// }
// .fancyLink:hover.noUnderline,
// .fancyLink:focus-visible.noUnderline {
// 	background-image: linear-gradient(
// 			90deg,
// 			var(--underlineHoverColor1),
// 			var(--underlineHoverColor2)
// 		),
// 		linear-gradient(transparent, transparent);
// }

a:hover,
a:focus-visible {
	color: var(--linkHover1);
}

.fancyLink:focus-visible:not(.noColor) {
	outline: 2px dotted currentColor;
}

.noLink:link {
	color: unset;
	background: unset;
	background-position: 0 0;
	background-size: 0 0;
}

.noUnderline {
	text-decoration: none;
}

a.documentLink:link {
	color: var(--documentColor1);
}
a.documentLink:visited {
	color: var(--documentVisitedColor1);
}
a.documentLink:hover,
a.documentLink:focus-visible {
	color: var(--documentHoverColor1);
}
a.documentLink.fancyLink {
	--underlineColor1: var(--documentColor1);
	--underlineColor2: var(--documentVisitedColor1);
	--underlineHoverColor1: var(--documentHoverColor1);
	--underlineHoverColor2: var(--documentHoverColor2);
}

.asideContent {
	// float: right;

	// margin-left: 2rem;
	margin-block: var(--gapPair);
	padding-inline: 0.6rem;
	padding-block: 0.4rem;

	margin-right: calc(var(--containerPadding-main) * -1);
	padding-right: var(--containerPadding-main);

	border-left: 2px solid var(--coloredTitleTextColor1);

	background-color: var(--contentBackground3);

	h1,
	h2,
	h3,
	h4,
	h5,
	h5 {
		font-size: 1.4rem;
	}
	& > :first-child {
		margin-top: 0;
	}

	p {
		max-width: var(--paragraphWidth-thin);
	}

	&.float {
		float: right;

		margin-top: 0;
	}

	&.blockSymmetric {
		& > :last-child {
			margin-bottom: 0;

			& > :last-child {
				margin-bottom: 0;
			}
		}
	}
}

.withAsideColumn {
	// display: grid;
	// grid-template:
	// 	'. aside' auto
	// 	/ 1fr auto;
	// grid-auto-flow: row;
	display: flex;
	flex-flow: column nowrap;
	justify-content: flex-start;
	gap: var(--gapPair) var(--gapSection1);

	// .aside {
	// 	grid-area: aside;
	// }

	& > * {
		max-width: 100%;
		& > :first-child {
			margin-top: 0;
		}
	}

	& > :first-child {
		& > :last-child {
			margin-bottom: 0;
		}
	}
	& > :nth-child(2) {
		align-self: center;
	}

	@media (min-width: 32rem) {
		flex-direction: row;

		& > :nth-child(2) {
			align-self: flex-start;
		}
	}
}

.wideParagraphs {
	p {
		max-width: var(--paragraphWidth-wide);
	}
}

.scrollDetector {
	width: 100%;
	height: 0;
}

.fancyAddress {
	display: flex;
	flex-flow: row nowrap;
	gap: var(--gapWithinPair);

	width: fit-content;
	margin-block: var(--gapPair);
	padding: var(--containerPadding-medium);

	border: 2px solid var(--contentBorder1);
	border-radius: 0.4rem;

	background-color: var(--contentBackground1);

	& > div {
		flex-grow: 1;
		align-self: stretch;
	}

	&::before {
		content: 'signpost';

		@include iconOutlined;
		font-size: var(--md-medium);
		font-style: normal;

		color: var(--coloredTextColor1);
	}
}

.fancyImage {
	overflow: auto hidden;
	overscroll-behavior-x: contain;

	width: 100%;
	max-width: 100%;
	margin-block: var(--gapPair);

	border: 2px solid var(--contentBorder1);
	border-radius: 0.4rem;
}

.fancyFigure {
	overflow-x: auto;
	overscroll-behavior-x: contain;

	// display: flex;
	// flex-direction: column;
	// align-items: center;

	width: min-content;
	max-width: 100%;
	margin: 0;
	margin-block: var(--gapPair);
	// margin-inline: auto;

	.figBorder {
		overflow: hidden;

		display: flex;

		// align-self: flex-start;

		width: max-content;

		border: 2px solid var(--contentBorder1);
		border-radius: 6px;

		background: var(--contentBackground1);
	}

	& > :not(figcaption) {
		width: max-content;
		// max-width: 100%;
	}

	figcaption {
		max-width: var(--paragraphWidth-wide);
		width: 100%;
		display: block;
		margin-inline: auto;
		margin-top: var(--gapWithinPair);

		font-size: 0.9em;
		text-align: center;

		color: var(--textGrayColor);
	}

	&.left {
		float: left;
	}
	&.right {
		float: right;
	}

	@media (max-width: 60rem) {
		margin: var(--gapPair) auto;
	}
}

.fancyTable {
	overflow: clip;
	overflow-x: auto;
	overscroll-behavior-x: contain;

	width: fit-content;
	max-width: 100%;

	outline: 2px solid var(--listBorder1);
	border-radius: 0.2rem;

	table {
		border-collapse: collapse;
	}
	th,
	td {
		padding-block: calc(var(--gapWithinPair) / 2);

		border: 2px solid var(--listBorder1);

		text-align: center;

		&:first-child {
			border-left-width: 0;
		}
	}
	th {
		padding-inline: calc(var(--gapPair) / 2);

		font-weight: 600;

		color: var(--textBoldColor);

		background: var(--contentHeaderBackground1);

		a {
			@include fancyLink();

			--underlineColor2: var(--menuHoverTextColor2);
			color: inherit;
		}
	}
	// td {
	// 	border-inline-width: 0;
	// }

	tr:nth-child(2n + 1) {
		td {
			background: var(--listBackground1);
		}
	}
	tr:nth-child(2n + 1) {
		td {
			background: var(--listBackground2);
		}
	}
	thead {
		td,
		th {
			&:first-child {
				border-right-width: 2px;
			}
		}
		th {
			border-width: 2px 0;
		}
		tr {
			&:first-child {
				td,
				th {
					border-top-width: 0;
				}
			}
		}
	}
	tbody {
		th {
			border-width: 0 2px;
		}
		td {
			border-width: 2px 0;
		}
		tr:last-child {
			td,
			th {
				border-bottom-width: 0;
			}
		}
	}
}

.blackLineArt {
	-webkit-filter: invert(1);
	filter: invert(1);
}

.columnImage {
	min-width: 15rem;
	width: var(--paragraphWidth-thin);
	max-width: 100%;
	height: auto;
}
.thinImage {
	min-width: 12rem;
	width: calc(var(--paragraphWidth-thin) * 0.7);
	max-width: 100%;
	height: auto;
}
.mediumImage {
	min-width: 18rem;
	width: var(--paragraphWidth-medium);
	max-width: 100%;
	height: auto;
}
.wideImage {
	min-width: 22rem;
	width: var(--paragraphWidth-wide);
	max-width: 100%;
	height: auto;
}

.columns {
	display: flex;
	flex-flow: row wrap;
	gap: var(--gapWithinPair);
}

.highlightList {
	list-style-type: none;
	padding-left: 0;

	li {
		font-weight: 600;
		font-style: italic;

		color: var(--textBoldColor);
	}
}

.logo {
	--partWidth: calc(var(--width) - 0.5rem - 0.5rem * 2);

	a {
		display: flex;
		flex-flow: row nowrap;
		align-items: center;
		gap: 0.5rem;

		// top: 0;

		padding: 0.5rem;
		// margin-top: 1rem;

		text-decoration: none;

		img {
			--subwidth: calc(
				(var(--partWidth) * var(--goldenRatio)) /
					(1 + var(--goldenRatio))
			);
			// --subwidth: calc(var(--partWidth) / (1 + var(--goldenRatio)));

			-webkit-filter: invert(1);
			filter: invert(1);

			width: var(--subwidth);
			height: auto;
			aspect-ratio: 29 / 18;
			// aspect-ratio: 3 / 5;
		}
		.name {
			--factor: 0.1847393732;
			/* Magic constant that you multiply with your desired width, which gives you the appropriate font size to set.
			Let s be any arbitrary font size, w be the resulting width of the text element
			and c be the magic constant that we're looking for.
			Then c = s / w
			*/
			--subwidth: calc(var(--partWidth) / (1 + var(--goldenRatio)));
			// --subwidth: calc(
			// 	(var(--partWidth) * var(--goldenRatio)) /
			// 		(1 + var(--goldenRatio))
			// );

			font-size: calc(var(--subwidth) * var(--factor));
			font-family: 'EB Garamond', 'Times New Roman', serif;
			font-style: italic;
			font-weight: 400;
			letter-spacing: 0.2em;

			color: var(--titleTextColor);
		}
	}
}

.rentTable {
	overflow-x: auto;
	overscroll-behavior-x: contain;

	background: var(--contentBackground1);

	// width: 0.9rem !important;

	max-width: 100%;
	width: fit-content;

	outline: 2px solid var(--contentBorder1);
	border-radius: 0.4rem;

	table {
		border-collapse: collapse;
		// border-spacing: 0 calc(var(--gapPair) / 2);
	}

	th {
		color: var(--textBoldColor);
	}
	td {
		text-align: center;

		&.free {
			color: var(--textLowerColor1);

			background: var(--highlightColorContentBackground5);
		}
		// &.booked {
		// 	background: var(--inputInactiveBackground1);
		// }
		// &.low,
		// &.medium,
		// &.high {
		// 	color: var(--textLowerColor1);
		// }
		// &.low {
		// 	// background: var(--highlightColorContentBackground5);
		// }
		&.medium {
			font-style: italic;
			// background: var(--highlightColorContentBackground3);
		}
		&.high {
			font-weight: 600;
			// background: var(--highlightColorContentBackground1);
		}
	}

	th,
	td {
		padding-inline: calc(var(--gapWithinPair) / 2);

		border: 0 solid var(--contentBorder1);
	}

	tr.seperator {
		td {
			padding-block: calc(var(--gapPair) / 2);
			padding-inline: 0;

			// width: 100%;
			&:nth-child(2) {
				border-width: 0 2px;
			}

			&::before {
				content: '';

				display: block;

				width: 100%;

				border-top: 2px dashed;
				border-color: inherit;
			}
		}

		&:first-child {
			td {
				padding-top: 0;

				&::before {
					border-top-style: solid;
				}

				// border-inline-width: 0;

				// background-color: var(--contentBackground1);
			}
		}

		// & + tr {
		// 	th,
		// 	td {
		// 		padding-top: calc(var(--gapPair));
		// 	}
		// }
	}

	thead {
		th,
		td {
			padding-inline: calc(var(--gapWithinPair));

			background: var(--contentBackground1);

			&:nth-child(1),
			&:nth-child(2) {
				font-weight: 500;
			}

			// &:first-child {
			// 	border-left-width: 2px;
			// }
			// &:last-child {
			// 	border-right-width: 2px;
			// }
		}
		// tr {
		// 	&:first-child {
		// 		th,
		// 		td {
		// 			border-top-width: 2px;

		// 			&:first-child {
		// 				border-top-left-radius: 0.4rem;
		// 			}
		// 			&:last-child {
		// 				border-top-right-radius: 0.4rem;
		// 			}
		// 		}
		// 	}
		// }

		// tr {
		// 	top: 10rem;
		// 	position: sticky;
		// }
	}

	tbody {
		th:nth-child(1) {
			font-weight: 600;
			font-size: 1.2em;

			// border-left-width: 2px;
		}
		th:nth-child(6) {
			padding-block: 0;
			// padding: 0 calc(var(--gapWithinPair) / 2);
			vertical-align: top;

			// border-right-width: 2px;

			& > span {
				display: block;

				font-weight: 400;
				font-style: italic;
				text-align: start;
				line-height: 1.2em;
			}
		}

		td:nth-child(3) {
			border-left: 2px solid var(--contentBorder1);
		}
		td:nth-child(5) {
			border-right: 2px solid var(--contentBorder1);
		}

		th,
		td {
			padding-block: calc(var(--gapPair) / 2);

			// &:first-child {
			// 	border-bottom-left-radius: 0.4rem;
			// }
			// &:last-child {
			// 	border-bottom-right-radius: 0.4rem;
			// }
		}
	}

	.house {
		background: var(--contentBackground3);
	}

	a {
		@include fancyLink();

		--underlineColor2: var(--menuHoverTextColor2);

		color: inherit;
	}

	@media (max-width: 32rem) {
		tbody {
			th:nth-child(6) {
				width: calc(var(--gapWithinPair) + 1.2em);
				& > span {
					writing-mode: vertical-rl;
				}
				// text-orientation: sideways;
			}
		}
	}
}
